{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["importance","date","count","x","Date","Math","pow","Number","isNaN","Controls","_ref","turned","turn","next","answer","cards","cardIndex","length","react_default","a","createElement","id","className","onClick","style","backgroundColor","FlashCard","_ref2","card","toggleConfig","_ref3","front","back","_ref4","Object","slicedToArray","_ref5","_ref6","f","b","App_MemoryBattery","cl","latex_default","MemoryBattery","_ref7","memoryScore","lastSeenAt","icon","Header","_ref8","setCardIndex","configOpen","undefined","ConfigPanel","_ref9","setCards","_useState","useState","_useState2","setFront","_useState3","_useState4","setBack","mem","keys","localStorage","map","k","reduce","App_Instructions","value","onChange","e","target","marginTop","newCards","newCard","concat","toConsumableArray","setItem","JSON","stringify","toFixed","filename","text","element","document","setAttribute","encodeURIComponent","display","body","appendChild","click","removeChild","backup","Instructions","App","_useState5","config","getItem","parse","_unused","getCards","_useState6","_useState7","_useState8","setTurned","_useState9","_useState10","setConfigOpen","newCardIndex","_max","c","idx","_cards$_max","da","co","_useState11","_useState12","withDelay","setTimeout","App_Header","App_FlashCard","App_Controls","wasCorrect","_newCards$cardIndex","im","increment","App_ConfigPanel","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7db2fb7f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport Latex from \"react-latex\";\nimport \"./App.css\";\n\nconst THRESHOLD = 3 * 3600 * 1000; // 12 hours threshold\n\nconst importance = (date, count) => {\n  const x = (new Date() - new Date(date)) / 2 ** count;\n  return Number.isNaN(x) ? 1e6 : x;\n};\n\nconst backup = (filename, text) => {\n  var element = document.createElement(\"a\");\n  element.setAttribute(\n    \"href\",\n    \"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n  );\n  element.setAttribute(\"download\", filename);\n  element.style.display = \"none\";\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n};\n\nconst Controls = ({ turned, turn, next, answer, cards, cardIndex }) => {\n  if (!cards || cards.length === 0) return null;\n  return (\n    <div id=\"controls\">\n      {!turned && (\n        <button className=\"button\" onClick={turn}>\n          SHOW\n        </button>\n      )}\n      {turned && (\n        <button\n          className=\"button\"\n          style={{ backgroundColor: \"green\" }}\n          onClick={() => answer(true) || next(true)}\n        >\n          I KNOW\n        </button>\n      )}\n      {turned && (\n        <button\n          className=\"button\"\n          style={{ backgroundColor: \"red\" }}\n          onClick={() => answer(false) || next(true)}\n        >\n          I FORGOT\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst FlashCard = ({ turned, turn, card, toggleConfig }) => {\n  const [front, back] = (card && [card.front, card.back]) || [\"\", \"\"];\n  //const reverse = card && new Date(card.lastSeenAt).getSeconds() % 2 > 0.5;\n  const reverse = false;\n  const [f, b] = reverse ? [back, front] : [front, back];\n  return (\n    <div id=\"flashcard\" onClick={turn}>\n      <div className={turned ? \"showFront\" : \"showBack\"}>\n        <div className=\"front\">\n          <i className=\"edit-button fas fa-pencil-alt\" onClick={toggleConfig} />\n          <MemoryBattery cl=\"mem-battery\" card={card} />\n          <Latex>{f}</Latex>\n        </div>\n        <div className=\"back\">\n          <i className=\"edit-button fas fa-pencil-alt\" onClick={toggleConfig} />\n          <MemoryBattery cl=\"mem-battery\" card={card} />\n          <Latex>{b}</Latex>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst MemoryBattery = ({ card, cl }) => {\n  if (!card) return null;\n  const memoryScore = importance(card.lastSeenAt, card.count);\n  var icon = \"fas fa-battery-full\";\n  if (memoryScore > 1 * THRESHOLD) icon = \"fas fa-battery-three-quarters\";\n  if (memoryScore > 2 * THRESHOLD) icon = \"fas fa-battery-half\";\n  if (memoryScore > 3 * THRESHOLD) icon = \"fas fa-battery-quarter\";\n  if (memoryScore > 4 * THRESHOLD) icon = \"fas fa-battery-empty\";\n  return <i className={cl + \" \" + icon} />;\n};\n\nconst Header = ({ toggleConfig, cards, setCardIndex, configOpen, next }) => {\n  const toggleAdd = () => {\n    if (cards.length > 0) {\n      if (!configOpen) {\n        setCardIndex(undefined);\n      }\n      if (configOpen) next(false);\n      toggleConfig();\n    }\n  };\n  return (\n    <div id=\"header\">\n      <span>Flashcards</span>\n      <i className=\"fas fa-plus\" onClick={toggleAdd} />\n    </div>\n  );\n};\n\nconst getCards = config => {\n  try {\n    const cards = localStorage.getItem(\"lpfaucon.flashcards.cards\");\n    return cards ? JSON.parse(cards) : [];\n  } catch {\n    return [];\n  }\n};\n\nconst ConfigPanel = ({\n  toggleConfig,\n  setCardIndex,\n  cardIndex,\n  cards,\n  setCards\n}) => {\n  const f = cardIndex === undefined ? \"\" : cards[cardIndex].front;\n  const b = cardIndex === undefined ? \"\" : cards[cardIndex].back;\n  const [front, setFront] = useState(f);\n  const [back, setBack] = useState(b);\n\n  const addCard = () => {\n    if (front === \"\" || back === \"\") return;\n    const newCard = { front, back, lastSeenAt: new Date(), count: 0 };\n    var newCards;\n    if (cardIndex === undefined) {\n      newCards = [...cards, newCard];\n    } else {\n      newCards = [...cards];\n      newCards[cardIndex] = newCard;\n    }\n    localStorage.setItem(\"lpfaucon.flashcards.cards\", JSON.stringify(newCards));\n    toggleConfig();\n    setCards(newCards);\n    if (cardIndex === undefined) setCardIndex(newCards.length - 1);\n  };\n\n  const mem = Object.keys(localStorage)\n    .map(k => localStorage[k].length)\n    .reduce((a, b) => a + b, 0);\n\n  return (\n    <div id=\"config\">\n      {cards.length === 0 && <Instructions />}\n      <span>Front:</span>\n      <textarea\n        value={front}\n        onChange={e => setFront(e.target.value)}\n        className=\"card-textarea\"\n      />\n      <span>Back:</span>\n      <textarea\n        value={back}\n        onChange={e => setBack(e.target.value)}\n        className=\"card-textarea\"\n      />\n      <button\n        className=\"button\"\n        style={{ marginTop: \"16px\" }}\n        onClick={addCard}\n      >\n        {cardIndex === undefined ? \"ADD\" : \"SAVE\"}\n      </button>\n      <div className=\"separator\" />\n      <p>Memory used {(mem / 512).toFixed(2)} KB</p>\n      <div className=\"separator\" />\n      <span>Download a file containing all your cards</span>\n      <button\n        className=\"button-grey\"\n        onClick={() => backup(\"save.flashcards\", JSON.stringify(cards))}\n      >\n        Back-Up\n      </button>\n      {/* <div className=\"separator\" />\n      <span>Load cards</span>\n      <button className=\"button-grey\">Load</button> */}\n    </div>\n  );\n};\n\nconst Instructions = () => {\n  return (\n    <div>\n      <span>\n        Welcome to Flashcards app. To start using the app the only thing you\n        need to do is adding a card by writing down below what should appear at\n        the front and at the back of it. Later on you can add more cards by\n        clicking the <i className=\"fas fa-plus\" /> on top of the screen.\n      </span>\n      <div className=\"separator\" />\n    </div>\n  );\n};\n\nconst App = () => {\n  const [cards, setCards] = useState(getCards());\n  const [turned, setTurned] = useState(false);\n  const [configOpen, setConfigOpen] = useState(!cards || cards.length === 0);\n\n  const newCardIndex = () =>\n    cards.length > 0\n      ? cards.reduce((_max, c, idx) => {\n          const { lastSeenAt, count } = c;\n          const { lastSeenAt: da, count: co } = cards[_max];\n          const better = importance(lastSeenAt, count) > importance(da, co);\n          return better ? idx : _max;\n        }, 0)\n      : undefined;\n\n  const [cardIndex, setCardIndex] = useState(newCardIndex());\n\n  const next = withDelay => {\n    setTurned(false);\n    if (withDelay) {\n      setCardIndex(undefined);\n      setTimeout(() => setCardIndex(newCardIndex()), 350);\n    } else {\n      setCardIndex(newCardIndex());\n    }\n  };\n\n  const handleRecall = wasCorrect => {\n    const newCards = [...cards];\n    if (!newCards[cardIndex]) return;\n    const { lastSeenAt, count } = newCards[cardIndex];\n    newCards[cardIndex].lastSeenAt = new Date();\n    if (wasCorrect) {\n      const im = importance(lastSeenAt, count);\n      const increment = im > THRESHOLD ? 1 : im / THRESHOLD;\n      newCards[cardIndex].count = (newCards[cardIndex].count || 0) + increment;\n    } else {\n      newCards[cardIndex].count = 0;\n    }\n    localStorage.setItem(\"lpfaucon.flashcards.cards\", JSON.stringify(newCards));\n    setCards(newCards);\n  };\n\n  const turn = () => setTurned(!turned);\n  const toggleConfig = () => setConfigOpen(!configOpen);\n\n  return (\n    <div className=\"App\">\n      <Header\n        toggleConfig={toggleConfig}\n        cards={cards}\n        setCardIndex={setCardIndex}\n        next={next}\n        configOpen={configOpen}\n      />\n      {!configOpen && (\n        <FlashCard\n          turned={turned}\n          turn={turn}\n          card={cards && cards[cardIndex]}\n          toggleConfig={toggleConfig}\n        />\n      )}\n      {!configOpen && (\n        <Controls\n          turned={turned}\n          cards={cards}\n          cardIndex={cardIndex}\n          turn={turn}\n          next={next}\n          answer={handleRecall}\n        />\n      )}\n      {configOpen && (\n        <ConfigPanel\n          cards={cards}\n          cardIndex={cardIndex}\n          setCardIndex={setCardIndex}\n          toggleConfig={toggleConfig}\n          setCards={setCards}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}